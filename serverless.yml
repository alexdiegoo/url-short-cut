org: alexddev
service: url-short-cut

plugins:
  - serverless-offline

useDotenv: true

provider:
  name: aws
  runtime: nodejs22.x
  memorySize: 512
  timeout: 30
  architecture: x86_64
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
    PRISMA_CLI_BINARY_TARGETS: ${env:PRISMA_CLI_BINARY_TARGETS}
    IPINFO_API_KEY: ${env:IPINFO_API_KEY}
    JWT_SECRET: ${env:JWT_SECRET}
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        identitySource: $request.header.Authorization
        functionName: authorizerFun
        resultTtlInSeconds: 300
        enableSimpleResponses: true
        payloadVersion: 2.0

functions:
  authorizerFun:
    handler: src/functions/authorizer.handler
  registerUser:
    handler: src/functions/registerUser.handler
    events:
      - httpApi:
          method: post
          path: /register
  loginUser:
    handler: src/functions/loginUser.handler
    events:
      - httpApi:
          method: post 
          path: /login
  createShortCutURL:
    handler: src/functions/shorten.handler
    events:
      - httpApi:
          method: post
          path: /shorten
          authorizer:
            name: customAuthorizer
  redirect:
    handler: src/functions/redirect.handler
    events:
      - httpApi:
          method: get
          path: /{shortUrlId}
  deleteShortURL:
    handler: src/functions/deleteShortUrl.handler
    events:
      - httpApi:
          method: delete
          path: /shorten/{shortUrlId}
          authorizer:
            name: customAuthorizer

package:
  individually: true
  patterns:
    - "!node_modules/.prisma/client/libquery_engine-*"
    - "node_modules/.prisma/client/libquery_engine-rhel-*"
    - "!node_modules/prisma/libquery_engine-*"
    - "!node_modules/@prisma/engines/**"
    - "node_modules/.prisma/client/schema.prisma"
    - "generated/**"
